version: "3.8"
services:
    nginx:
      build: docker/nginx
      container_name: ${PROJECT_NAME}-nginx
      user: root
      working_dir: /application
      volumes:
        - ./:/application
        - ./docker/nginx/templates:/etc/nginx/templates
        - ./storage/logs/nginx:/var/log/nginx
      environment:
        - PROJECT_NAME=${PROJECT_NAME}
      ports:
      - ${NGINX_LOCAL_PORT}:80
      depends_on:
      - php-fpm

    php-fpm:
      build:
        context: ./
        dockerfile: docker/php-fpm/Dockerfile
      container_name: ${PROJECT_NAME}-php
      working_dir: /application
      ports:
        - ${PHP_EXTERNAL_PORT}:1597
      volumes:
        - ./:/application
        - ./docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
      environment:
        PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
        XDEBUG_CONFIG: client_host=${XDEBUG_REMOTE_HOST} client_port=${XDEBUG_PORT} remote_enable=1
        PHP_IDE_CONFIG: serverName=${XDEBUG_SERVER_NAME}

    postgres:
      build:
        context: ./
        dockerfile: docker/postgres/Dockerfile
      command: postgres -c 'max_connections=${DB_MAX_CONNECTIONS}'
      container_name: ${PROJECT_NAME}-postgres
      user: root
      working_dir: /application
      volumes:
        - ./docker/postgres/pg-init-scripts:/docker-entrypoint-initdb.d
        - ./:/application
        - pgdata:/var/lib/postgresql/data
      environment:
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
        - POSTGRES_MULTIPLE_DATABASES=${DB_DATABASE},${DB_DATABASE_LOGS}
      ports:
        - "${POSTGRES_EXTERNAL_PORT}:5432"

volumes:
  pgdata:

networks:
  default:
    driver: bridge
  second_default:
    external: true
